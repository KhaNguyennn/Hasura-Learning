version: "3.6"
services:
  postgres:
    image: postgres:15
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: my_pgdb
  graphql:
    build:
      context: /home/kha/Documents/graphql-apollo-server/Aggregate_Hasura
      dockerfile: Dockerfile_dev
      network: host
    ports:
      - "9092:9000"
    volumes:
      - /home/kha/Documents/graphql-apollo-server/Aggregate_Hasura:/usr/src/graphql
  graphql-engine:
    image: hasura/graphql-engine:v2.29.0
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgres@postgres:5432/my_pgdb
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgres@postgres:5432/my_pgdb
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs

      ## enable the console served by server

      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to run console offline (i.e load console assets from server instead of CDN)
      # HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: 123456
      HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS: "true"
      # HASURA_GRAPHQL_METADATA_DEFAULTS: '{"backend_configs":{"dataconnector":{"athena":{"uri":"http://data-connector-agent:8081/api/v1/athena"},"mariadb":{"uri":"http://data-connector-agent:8081/api/v1/mariadb"},"mysql8":{"uri":"http://data-connector-agent:8081/api/v1/mysql"},"oracle":{"uri":"http://data-connector-agent:8081/api/v1/oracle"},"snowflake":{"uri":"http://data-connector-agent:8081/api/v1/snowflake"}}}}'
      # HASURA_GRAPHQL_JWT_SECRET: '{"type": "RS512", "key": "-----BEGIN CERTIFICATE-----\nMIIDHTCCAgWgAwIBAgIJRRVMruxMm26cMA0GCSqGSIb3DQEBCwUAMCwxKjAoBgNV\nBAMTIWRldi1oZXM2aW1vZXF2cXRiMTRlLnVzLmF1dGgwLmNvbTAeFw0yMzA3MTcw\nNzA5MzNaFw0zNzAzMjUwNzA5MzNaMCwxKjAoBgNVBAMTIWRldi1oZXM2aW1vZXF2\ncXRiMTRlLnVzLmF1dGgwLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\nggEBAI2mRSbLuHA8n8Ri/0La/cdrgu4oOiawZw0C+oqq4MIKRjHyRcO65ZiirL3Y\nvfn+WFOAZ/AsQeMQG1z5fWVHNb/EvW2ZFE2J+5tL1RfFe3ga0encjEilI6rYjFw9\nUMQnxqkYRjmFNmTlviw8MhUj/BKRRIqUqa2erAUkhWuexVgbOWEO6IHjMEnQSM4K\nVfDyCwX3QT+0a4Pg2jHzbouNEwz9/5UtZsdIgMiYgOq31MROZbDoO83FWMOL7oZR\nin968tfHjLa7chzAESRdm4u+re9cC+JNWMbN8l1CMdHlK00bSj4RU5M4mVaQ6iQg\nb7tOiSmIYGyzaKjRMTdLV05nL08CAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAd\nBgNVHQ4EFgQUNeK1blRp1ErHXjyfD3tNjYhjVnUwDgYDVR0PAQH/BAQDAgKEMA0G\nCSqGSIb3DQEBCwUAA4IBAQBhtliQHeczzQIERRTUUYmNjv8WSpTXTB8bEoGIG0QN\n03xHHYpkk4FYD+8nLRQHxzD0H+0VzYSzhbmMGwFBTaLjjv9o8URp8qQNHS3isYlg\nkuZK3Ix1yhXb/QOyfcGHEg0zsnThVTso99pllO+GAqU+GcZVs+DEh8cZQrRZslPA\neSijadqm5GGI6SFINMmeU3+tnnwPhY+c8RjQVNTO6YzWHYQAldxGHpjC+zAAxKfs\npVyOZYTbBbH1hdIsKdBxzodD6U3ImP4+j40TvKX6MTUwPtke6RKX6bWWwXATwYMm\nL/6niTSk+HtwaWtLLNLJfk1rfljLB30OBIkjtJSgI4JF\n-----END CERTIFICATE-----"}'
      HASURA_GRAPHQL_AUTH_HOOK: http://graphql:9000/authorized
volumes:
  db_data:
